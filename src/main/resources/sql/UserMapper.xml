<?xml version="1.0" encoding="UTF-8"?>



<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		
<mapper namespace="UserMapper">

	<!--User Table-->
	<resultMap id="userSelectMap" type="user">
		<result property="userId"				column="user_id"					jdbcType="VARCHAR"/>
		<result property="userPassword"			column="user_password"				jdbcType="VARCHAR"/>
		<result property="userName"				column="user_name"					jdbcType="VARCHAR"/>
		<result property="userPhone"			column="user_phone"					jdbcType="VARCHAR"/>
		<result property="userBirth"			column="user_birth"					jdbcType="DATE"/>
		<result property="userAddr"				column="user_addr"					jdbcType="VARCHAR"/>
		<result property="userAddrDetail"		column="user_addr_detail"			jdbcType="VARCHAR"/>
		<result property="userMapLa"			column="user_map_la"				jdbcType="DECIMAL"/>
		<result property="userMapLo"			column="user_map_lo"				jdbcType="DECIMAL"/>
		<result property="userRegDate"			column="user_reg_date"				jdbcType="VARCHAR"/>
		<result property="ReportCount"			column="report_count"				jdbcType="INT"/>
		<result property="userEmail"			column="user_email"					jdbcType="VARCHAR"/>
		<result property="userEmailStatus"		column="user_email_status"			jdbcType="CHAR"/>
		<result property="userProImg"			column="user_pro_img"				jdbcType="VARCHAR"/>
		<result property="userFavPlace"			column="user_fav_place"				jdbcType="VARCHAR"/>
		<result property="userFavPlaceDetail"	column="user_fav_place_detail"		jdbcType="VARCHAR"/>
		<result property="userFavMenu"			column="user_fav_menu"				jdbcType="VARCHAR"/>
		<result property="userIntro"			column="user_intro"					jdbcType="VARCHAR"/>
		<result property="userTotalPoint"		column="user_total_point"			jdbcType="INT"/>
		<result property="userByeStatus"		column="user_bye_status"			jdbcType="CHAR"/>
		<result property="userByeReason"		column="user_bye_reason"			jdbcType="CHAR"/>
		<result property="userByeRegDate"		column="user_bye_reg_date"			jdbcType="DATE"/>
		<result property="role"					column="role"						jdbcType="CHAR"/>
		<result property="blackRedDate"			column="black_reg_date"				jdbcType="DATE"/>
		<result property="blackEndDate"			column="black_end_date"				jdbcType="DATE"/>
	</resultMap>

	<!--Report Table-->
	<resultMap id="reportSelectMap" type="report">
		<result property="reportNo"					column="report_no"					jdbcType="VARCHAR"/>
		<result property="reportUserId.userId"		column="report_user_id"				jdbcType="VARCHAR"/>
		<result property="reportTargetId.userId"	column="report_target_id"			jdbcType="VARCHAR"/>
		<result property="reportDate"				column="report_date"				jdbcType="DATE"/>
		<result property="reportContent"			column="report_content"				jdbcType="VARCHAR"/>
		<result property="reportLink"				column="report_link"				jdbcType="VARCHAR"/>
		<result property="reportType"				column="report_type"				jdbcType="CHAR"/>
		<result property="reportProcStatus"			column="report_proc_status"			jdbcType="CHAR"/>

		<association property="reportUserId"  javaType="user">
			<id property="userId" column="report_user_id" jdbcType="VARCHAR"/>
		</association>

		<association property="reportTargetId"  javaType="user">
			<id property="userId" column="report_target_id" jdbcType="VARCHAR"/>
		</association>

	</resultMap>


	<!--User-->

	<!--id중복-->
	<select id = "idChkDuplication" parameterType="String" resultMap="user">
		SELECT COUNT(*)
		FROM user
		WHERE user_id = #{userId}
	</select>

	<!--email중복-->
	<select id = "emailChkDuplication" parameterType="String" resultMap="user">
		SELECT COUNT(*)
		FROM user
		WHERE user_email = #{userEmail}
	</select>

	<!--phone중복-->
	<select id = "phoneChkDuplication" parameterType="String" resultMap="user">
		SELECT COUNT(*)
		FROM user
		WHERE user_phone= #{userPhone}
	</select>

	<!--회원가입-->
	<insert id="addUserInfo" parameterType="user" >
		INSERT
		INTO user
		( user_id, user_password, user_name, user_phone, user_birth, user_addr, user_addr_Detail, user_email, user_email_status, user_reg_date)
		VALUES
			( 	#{userId},
			 	#{userPassword},
			 	#{userName},
			 	#{userPhone},
			 	#{userBirth : DATE},
			 	#{userAddr : VARCHAR},
			 	#{userAddrDetail : VARCHAR},
			 	#{userEmail : VARCHAR},
			 	'0',
			 	SYSDATE())
	</insert>

	<!--info수정-->
	<update	id="updateUserInfo"	parameterType="user" >
		UPDATE user
		<set>
			user_name					= #{userName},
			user_phone					= #{userPhone},
			user_birth					= #{userBirth},
			user_addr					= #{userAddr},
			user_addr_detail			= #{userAddrDetail},
			user_email					= #{userEmail},
			user_email_status			= #{userEmailStatus}
		</set>
		WHERE user_id = {userId}
	</update>

	<!--profile수정-->
	<update	id="updateUserProfile" parameterType="user" >
		UPDATE user
		<set>
			user_pro_img				= #{userProImg},
			user_fav_place				= #{userFavPlace},
			user_fav_place_detail		= #{userFavPlaceDetail},
			user_fav_menu				= #{userFavMenu},
			user_intro					= #{userIntro}
		</set>
		WHERE user_id = {userId}
	</update>

	<!--map수정-->
	<update	id="updateUserMap"	parameterType="user" >
		UPDATE user
		<set>
			user_map_la					= #{userMapLa},
			user_map_lo					= #{userMapLo}
		</set>
		WHERE user_id = {userId}
	</update>

	<!--정보조회-->
	<select id = "getUser" parameterType="String" resultMap="userSelectMap">
		SELECT
			user_id, user_password, user_name, user_phone, user_birth, user_addr, user_addr_Detail, user_email, user_fav_menu,
			user_map_lo, user_map_la, user_reg_date, user_pro_img, user_fav_place, user_fav_place_detail, user_intro, user_total_point
		FROM user
		WHERE user_id = #{value}
	</select>


	<!--목록조회-->


	<!--id찾기-->
	<select id="getUserId" parameterType="user" resultType="String">
		SELECT
		user_id
		FROM user
		WHERE user_name = #{userName}  AND  role != '1'
		<if test="user_phone == null and user_email != null">
			AND user_email = #{userEmail}
		</if>
		<if test="user_phone != null and user_email == null">
			AND user_phone = #{userPhone}
		</if>
	</select>

	<!--PW변경-->
	<update id="updatePassword" parameterType="user">
		UPDATE user
			<set>
			   user_password = #{userPassword}
			</set>
		WHERE user_id = #{userId}
	</update>

	<!--회원탈퇴-->
	<update id = "updateUserByeStatus" parameterType="String">
		UPDATE user
			<set>
		    	user_bye_reg_date 	= SYSDATE,
				user_bye_reason 	= #{userByeReason},
		    	user_bye_status 	= '1'
			</set>
		WHERE user_id = #{value}
	</update>

	<!--블랙리스트등록-->
	<update id = "updateBlackStatus" parameterType="user">
		UPDATE user
			<set>
				role			= '2'
				black_reg_date	= SYSDATE()
				black_end_date	= DATE_ADD(SYSDATE(), INTERVAL 3 DAY)
			</set>
		WHERE user_id = #{value}
	</update>


	<!--Report-->

	<!--add:등록-->
	<insert id="addReport" parameterType="report">
		INSERT
		INTO report
		( report_user_id, report_target_id, report_date, report_content, report_link, report_type, report_proc_status)
		VALUES
			(	#{reportUserId.userId},
				#{reportTargetId.userId},
				 SYSDATE(),
				#{reportContent},
				#{reportLink},
				#{reportType}	)
	</insert>

	<!--update:수정
	<update id="updateReport" parameterType="report">
		UPDATE report
			<set>
				report_content		=	#{reportContent},
				report_link			=	#{reportLink},
				report_type			=	#{reportType}
			</set>
	</update>
	WHERE report_no = #{reportNo}-->

	<!--get:조회-->
	<select id = "getReport" parameterType="int" resultMap="report" >
		SELECT *
		FROM report
		WHERE report_no = #{value}
	</select>

	<!--getList:목록-->


</mapper>
